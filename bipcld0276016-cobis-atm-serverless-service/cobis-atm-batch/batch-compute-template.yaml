AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  atm-service

  SAM Template for atm-service batch
Parameters:
  ######################### Technical Parameters ############################
  AwsAccountIdToDeploy:
    Type: String
    Description: Identificador de la cuentas AWS donde se desplegará el API de desarrollo.
  RegionToDeploy:
    Type: String
    AllowedValues: [us-east-2, us-west-2, us-east-1]
    ConstraintDescription: must specify us-east-2,us-west-2,us-east-1.
    Description: Región en la cual se realizará el despliegue del ambiente de desarrollo.
  LogLevel:
    Type: String
    AllowedValues: [INFO, DEBUG, WARNING, TRACE]
    ConstraintDescription: must specify INFO, DEBUG, WARNING or TRACE.
    Description: "Nivel de escritura de logs en los lambda INFO,DEBUG,WARNING,TRACE"
  SecurityGroupIds:
    Type: String
    Description: "Id de la VPC Endpoint que será asociada al API, esta solo se aplica si el API es de tipo privado."
  SubnetIds:
    Type: CommaDelimitedList
    Description: "Identificador de las subnets donde se desplegará el API de desarrollo (Deben estar entre comillas dobles y separadas por comas)."
  EcsTaskExecutionRole:
    Type: String
    Description: "Rol de ejecución de tareas de AWS Batch"
  AWSBatchServiceRole:
    Type: String
    Description: "Rol para el servicio de ambiente de computacion en batch."
  ImageBatchSharedResourcesAccount:
    Description: Imagen de ejecución procesos Batch de la cuenta de recursos compartidos
    Type: String
  DatabaseSecretArn:
    Type: String
    Description: "Arn del secreto que contiene los datos de conexion a la base de datos MySQL para el microservicio."
  EncryptionKeySecretName:
    Type: String
    Description: "Nombre del secreto de la llave de encriptación"
  TimeZone:
    Type: String
    Description: "Identificador de zona horaria."
  AtmFileProcessingLambdaConfiguration:
    Description: "AtmBatchUpdatingLambda"
    Type: String
    Default: "1024:0:0:0:0:0:INFO"
  Organization:
    Type: String
    Description: "Identificador del dueño componente."
  Package:
    Type: String
    Description: "Identificador del paquete de productos comerciales al que se asocia el componente."
  Version:
    Type: String
    Default: "0.1"
    Description: "Versión del módulo o aplicación a la que pertenece el componente."
  EnvironmentId:
    Type: String
    Description: "Identificador del ambiente."
  EnvironmentIdBase:
    Type: String
    Description: "Prefijo de recursos de la infraestructura base para referenciar en el microservicio.Pueden ser [dev,stg,prod o otro personalizado]"
  EnvironmentType:
    Type: String
    AllowedValues: [Production, Staging, Quality, Development, Integration, Formation, Migration]
    ConstraintDescription: must specify Production, Staging, Quality, Development, Integration, Formation, Migration
  TenantId:
    Type: String
    Description: "Identificador del tenant."
  Project:
    Type: String
    Description: "Identificador del proyecto por el que se crea el componente."
  Module:
    Type: String
    Description: "Identificador del módulo."
  ModuleNameInLowerCase:
    Type: String
    Description: "Nombre del módulo o microservicio en minusculas."
  ProcessingType:
    Type: String
    Description: "Tipo de procesamiento."
  LoggingBucket:
    Default: ""
    Type: String
    Description: "Bucket en el cual se almacenaran los logs de acceso a s3"
  TransferFamilyUserIn:
    Description: "Nombre de usuario de coneccion al SFTP en el directorio de entrada"
    Type: String
  TransferFamilyServerId:
    Description: "Instancia del servidor de transfer family que se encuentra ejecutando"
    Type: String
  TransferFamilyUserPublicKey:
    Description: "Llave publica que se utiliza para la autenticación de usuario"
    Type: String

Conditions:
  LoggingBucketIsDefined: !Not [ !Equals [ "", !Ref LoggingBucket ] ]

Resources:

  #------------------------------------------- Begin: S3 Bucket -------------------------------------------
  ATMReconciliationInputBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      NotificationConfiguration:
        EventBridgeConfiguration:
          EventBridgeEnabled: true
      BucketName: !Sub ${EnvironmentId}-${ModuleNameInLowerCase}-${TenantId}-batch-input-${AWS::AccountId}
      AccessControl: 'Private'
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: TRUE
        BlockPublicPolicy: TRUE
        IgnorePublicAcls: TRUE
        RestrictPublicBuckets: TRUE
      LoggingConfiguration:
        !If 
        - LoggingBucketIsDefined
        - DestinationBucketName: !Ref LoggingBucket
          LogFilePrefix: !Join ['',["input","-", !Ref "Module" ]]
        - !Ref AWS::NoValue
      LifecycleConfiguration:
        Rules:
          - Id: inputfiledirectory-life-cycle
            Status: Enabled
            ExpirationInDays: 60
            NoncurrentVersionExpirationInDays: 60
            NoncurrentVersionTransitions:
              - TransitionInDays: 30
                StorageClass: INTELLIGENT_TIERING
            Transitions:
              - TransitionInDays: 30
                StorageClass: INTELLIGENT_TIERING
      Tags:
        - Key: "ORGANIZATION"
          Value: !Ref Organization
        - Key: "PACKAGE"
          Value: !Ref Package
        - Key: "VERSION"
          Value: !Ref Version
        - Key: "ENVIRONMENT_TYPE"
          Value: !Ref EnvironmentType
        - Key: "ENVIRONMENT_ID"
          Value: !Ref EnvironmentId
        - Key: "TENANT_ID"
          Value: !Ref TenantId
        - Key: "PROJECT"
          Value: !Ref Project
        - Key: "MODULE"
          Value: !Ref Module
        - Key: "PROCESSING_TYPE"
          Value: "BATCH"

  InputFileDirectoryPolicy:
    Type: "AWS::S3::BucketPolicy"
    Properties:
      Bucket:
        Ref: "ATMReconciliationInputBucket"
      PolicyDocument:
        Statement:
          - Effect: "Deny"
            Principal: "*"
            Action:
              - "s3:*"
            Resource:
              - !Join [ "", [ !GetAtt ATMReconciliationInputBucket.Arn, "/*" ] ]
              - !GetAtt ATMReconciliationInputBucket.Arn
            Condition:
              Bool:
                "aws:SecureTransport":
                  - "false"

  ATMReconciliationOutputBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      BucketName: !Sub ${EnvironmentId}-${ModuleNameInLowerCase}-${TenantId}-batch-output-${AWS::AccountId}
      AccessControl: 'Private'
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: TRUE
        BlockPublicPolicy: TRUE
        IgnorePublicAcls: TRUE
        RestrictPublicBuckets: TRUE
      LoggingConfiguration:
        !If 
        - LoggingBucketIsDefined
        - DestinationBucketName: !Ref LoggingBucket
          LogFilePrefix: !Join ['',["input","-", !Ref "Module" ]]
        - !Ref AWS::NoValue
      LifecycleConfiguration:
        Rules:
          - Id: outputfiledirectory-life-cycle
            Status: Enabled
            ExpirationInDays: 60
            NoncurrentVersionExpirationInDays: 60
            NoncurrentVersionTransitions:
              - TransitionInDays: 30
                StorageClass: INTELLIGENT_TIERING
            Transitions:
              - TransitionInDays: 30
                StorageClass: INTELLIGENT_TIERING
      Tags:
        - Key: "ORGANIZATION"
          Value: !Ref Organization
        - Key: "PACKAGE"
          Value: !Ref Package
        - Key: "VERSION"
          Value: !Ref Version
        - Key: "ENVIRONMENT_TYPE"
          Value: !Ref EnvironmentType
        - Key: "ENVIRONMENT_ID"
          Value: !Ref EnvironmentId
        - Key: "TENANT_ID"
          Value: !Ref TenantId
        - Key: "PROJECT"
          Value: !Ref Project
        - Key: "MODULE"
          Value: !Ref Module
        - Key: "PROCESSING_TYPE"
          Value: "BATCH"

  OutputFileDirectoryPolicy:
    Type: "AWS::S3::BucketPolicy"
    Properties:
      Bucket:
        Ref: "ATMReconciliationOutputBucket"
      PolicyDocument:
        Statement:
          - Effect: "Deny"
            Principal: "*"
            Action:
              - "s3:*"
            Resource:
              - !Join ["", [!GetAtt ATMReconciliationOutputBucket.Arn, "/*"]]
              - !GetAtt ATMReconciliationOutputBucket.Arn
            Condition:
              Bool:
                "aws:SecureTransport":
                  - "false"

  SaExecutableFileDirectoryBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      BucketName: !Sub ${EnvironmentId}-atm-${TenantId}-batch-executablefiledirectory-${AwsAccountIdToDeploy}
      AccessControl: "Private"
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: TRUE
        BlockPublicPolicy: TRUE
        IgnorePublicAcls: TRUE
        RestrictPublicBuckets: TRUE
      LoggingConfiguration:
        !If
        - LoggingBucketIsDefined
        - DestinationBucketName: !Ref LoggingBucket
          LogFilePrefix: !Join [ '',[ "input","-", !Ref "Module" ] ]
        - !Ref AWS::NoValue
      Tags:
        - Key: "ORGANIZATION"
          Value: !Ref Organization
        - Key: "PACKAGE"
          Value: !Ref Package
        - Key: "VERSION"
          Value: !Ref Version
        - Key: "ENVIRONMENT_TYPE"
          Value: !Ref EnvironmentType
        - Key: "ENVIRONMENT_ID"
          Value: !Ref EnvironmentId
        - Key: "TENANT_ID"
          Value: !Ref TenantId
        - Key: "PROJECT"
          Value: !Ref Project
        - Key: "MODULE"
          Value: !Ref Module
        - Key: "PROCESSING_TYPE"
          Value: "BATCH"

  SaExecutableFileDirectoryPolicy:
    Type: "AWS::S3::BucketPolicy"
    Properties:
      Bucket:
        Ref: "SaExecutableFileDirectoryBucket"
      PolicyDocument:
        Statement:
          - Effect: "Deny"
            Principal: "*"
            Action:
              - "s3:*"
            Resource:
              - !Join [ "", [ !GetAtt SaExecutableFileDirectoryBucket.Arn, "/*" ] ]
              - !GetAtt SaExecutableFileDirectoryBucket.Arn
            Condition:
              Bool:
                "aws:SecureTransport":
                  - "false"
  #------------------------------------------- End: S3 Bucket -------------------------------------------

########################################################################
### *** Aws Lambda *** ###
  AtmFileProcessingLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${EnvironmentId}-AtmFileProcessingLambda"
      Handler: com.cobis.cloud.atm.aws.batch.lambda.FileProcessing::handleRequest
      Role: !GetAtt AtmLambdaRole.Arn
      Timeout: 19
      Architectures:
        - arm64
      MemorySize: 512
      CodeUri: ../cobis-atm-batch/target/cobis-atm-serverless-service-batch.jar
      Runtime: java8.al2
      Tracing: Active
      VpcConfig:
        SecurityGroupIds: [ !Ref SecurityGroupIds ]
        SubnetIds: !Ref SubnetIds
      Environment:
        Variables:
          LOG_LEVEL: !Select [ 6, !Split [ ":", !Ref AtmFileProcessingLambdaConfiguration ] ]
          SECRET_ARN: !Ref DatabaseSecretArn
          TZ: !Ref TimeZone
      Tags:
        ORGANIZATION: !Ref Organization
        PACKAGE: !Ref Package
        VERSION: !Ref Version
        ENVIRONMENT_TYPE: !Ref EnvironmentType
        ENVIRONMENT_ID: !Ref EnvironmentId
        TENANT_ID: !Ref TenantId
        PROJECT: !Ref Project
        MODULE: !Ref Module
        PROCESSING_TYPE: !Ref ProcessingType

  AtmLambdaRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: !Sub "${EnvironmentId}-AtmFileProcessingLambdaRole"
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Path: /
      Policies:
        - PolicyName: !Sub "${EnvironmentId}-atm-policy-file-processing"
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'secretsmanager:GetSecretValue'
                Resource:
                  - !Ref DatabaseSecretArn
              - Effect: Allow
                Action:
                  - 'events:PutEvents'
                Resource: 'arn:aws:events:*:*:event-bus/*'
#        - PolicyName: !Sub "${EnvironmentId}-atm-policy_allow_createLogGroup"
#          PolicyDocument:
#            Version: '2012-10-17'
#            Statement:
#              - Effect: Allow
#                Action:
#                  - 'logs:CreateLogGroup'
#                Resource: !Sub 'arn:aws:logs:${RegionToDeploy}:${AwsAccountIdToDeploy}:*'
#        - PolicyName: !Sub "${EnvironmentId}-atm-policy_allow_create_put_LogEvents"
#          PolicyDocument:
#            Version: '2012-10-17'
#            Statement:
#              - Effect: Allow
#                Action:
#                  - 'logs:CreateLogStream'
#                  - 'logs:PutLogEvents'
#                Resource: !Sub 'arn:aws:logs:${RegionToDeploy}:${AwsAccountIdToDeploy}:log-group:/aws/lambda/${EnvironmentId}-AtmFileProcessingLambda:*'
      Tags:
        - Key: "ORGANIZATION"
          Value: !Ref Organization
        - Key: "PACKAGE"
          Value: !Ref Package
        - Key: "VERSION"
          Value: !Ref Version
        - Key: "ENVIRONMENT_TYPE"
          Value: !Ref EnvironmentType
        - Key: "ENVIRONMENT_ID"
          Value: !Ref EnvironmentId
        - Key: "TENANT_ID"
          Value: !Ref TenantId
        - Key: "PROJECT"
          Value: !Ref Project
        - Key: "MODULE"
          Value: !Ref Module
        - Key: "PROCESSING_TYPE"
          Value: !Ref ProcessingType
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonRDSDataFullAccess
        - arn:aws:iam::aws:policy/AmazonVPCFullAccess
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/AmazonSSMReadOnlyAccess
        - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
        - arn:aws:iam::aws:policy/AmazonS3FullAccess

  AtmFileProcessingEventRule:
    Type: AWS::Events::Rule
    Properties:
      Description: "Event Rule For File Processing"
      Name: !Sub "${EnvironmentId}-atm-file-processing-rule"
      EventPattern:
        source:
          - "aws.s3"
        detail-type:
          - "Object Created"
        detail:
          bucket:
            name:
              - !Sub "${EnvironmentId}-${ModuleNameInLowerCase}-${TenantId}-batch-input-${AWS::AccountId}"
      State: "ENABLED"
      Targets:
        - Arn: !GetAtt AtmFileProcessingLambda.Arn
          Id: "AtmFileProcessingLambdaRule"

  AtmFileProcessingLambdaPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - "AtmFileProcessingLambda"
    Properties:
      Action: "lambda:InvokeFunction"
      FunctionName: !Ref AtmFileProcessingLambda
      Principal: "events.amazonaws.com"
      SourceArn: !GetAtt AtmFileProcessingEventRule.Arn

########################################################################
### ****  Aws Transfer Family **** ###
  SFTPTransferFamilyRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action: sts:AssumeRole
            Principal:
              Service:
                - transfer.amazonaws.com
            Effect: Allow
            Sid: ""
      Path: /
      RoleName: !Sub "${EnvironmentId}-${ModuleNameInLowerCase}-TransferFamily-ExecutionRole"
      Tags:
        - Key: "ORGANIZATION"
          Value: !Ref Organization
        - Key: "PACKAGE"
          Value: !Ref Package
        - Key: "VERSION"
          Value: !Ref Version
        - Key: "ENVIRONMENT_TYPE"
          Value: !Ref EnvironmentType
        - Key: "ENVIRONMENT_ID"
          Value: !Ref EnvironmentId
        - Key: "TENANT_ID"
          Value: !Ref TenantId
        - Key: "PROJECT"
          Value: !Ref Project
        - Key: "MODULE"
          Value: !Ref Module
        - Key: "PROCESSING_TYPE"
          Value: "BATCH"

  SFTPTransferFamilyPolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: !Sub "${EnvironmentId}-${ModuleNameInLowerCase}-TransferFamily-Policy"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action:
              - s3:ListBucket
            Effect: Allow
            Resource: !Sub "arn:aws:s3:::${EnvironmentId}-${ModuleNameInLowerCase}-${TenantId}-batch-input-${AWS::AccountId}"

          - Action:
              - s3:PutObject
              - s3:GetObject
              - s3:DeleteObject
              - s3:DeleteObjectVersion
              - s3:GetObjectVersion
              - s3:GetObjectACL
              - s3:PutObjectACL
            Effect: Allow
            Resource: !Sub "arn:aws:s3:::${EnvironmentId}-${ModuleNameInLowerCase}-${TenantId}-batch-input-${AWS::AccountId}/*"
      Roles:
        - Ref: SFTPTransferFamilyRole

  AtmTransferFamilyUserIn:
    DependsOn: "SFTPTransferFamilyRole"
    Type: AWS::Transfer::User
    Properties:
      HomeDirectory: !Sub "/${EnvironmentId}-${ModuleNameInLowerCase}-${TenantId}-batch-input-${AWS::AccountId}"
      HomeDirectoryType: PATH
      Role: !GetAtt SFTPTransferFamilyRole.Arn
      ServerId: !Ref TransferFamilyServerId
      UserName: !Ref TransferFamilyUserIn
      SshPublicKeys:
        - !Ref TransferFamilyUserPublicKey

  #------------------------------------------- Begin: JobDefinition -------------------------------------------

  JobDefinitionBatchExecutionRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action: sts:AssumeRole
            Principal:
              Service:
                - ecs-tasks.amazonaws.com
            Effect: Allow
            Sid: ""
      Path: /
      RoleName: !Sub "${EnvironmentId}-atm-batch-job-definition-execution-role"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEventBridgeFullAccess
      Policies:
        - PolicyName: !Sub "${EnvironmentId}-atm-batch-job-definition-execution-role-getSecret-policy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Sid: Stmt1611064287893
                Action:
                  - secretsmanager:DescribeSecret
                  - secretsmanager:GetSecretValue
                  - secretsmanager:ListSecrets
                Effect: Allow
                Resource: !Ref DatabaseSecretArn
        - PolicyName: !Sub "${EnvironmentId}-atm-batch-job-definition-execution-role-allow-buckets-policy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Sid: Stmt1611064607179
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetObjectACL
                  - s3:PutObjectACL
                Effect: Allow
                Resource:
                  - !Sub "arn:aws:s3:::${EnvironmentId}-*"
      Tags:
        - Key: "ORGANIZATION"
          Value: !Ref Organization
        - Key: "PACKAGE"
          Value: !Ref Package
        - Key: "VERSION"
          Value: !Ref Version
        - Key: "ENVIRONMENT_TYPE"
          Value: !Ref EnvironmentType
        - Key: "ENVIRONMENT_ID"
          Value: !Ref EnvironmentId
        - Key: "TENANT_ID"
          Value: !Ref TenantId
        - Key: "PROJECT"
          Value: !Ref Project
        - Key: "MODULE"
          Value: !Ref Module
        - Key: "PROCESSING_TYPE"
          Value: "BATCH"

  StepHistoricalMonetaryTransactionsJobDefinition:
    Type: AWS::Batch::JobDefinition
    Properties:
      Type: container
      PlatformCapabilities:
        - FARGATE
      JobDefinitionName: !Sub ${EnvironmentId}-cobis-atm-job-definition-16201
      RetryStrategy:
        Attempts: 3
        EvaluateOnExit:
        - OnStatusReason: "Timeout waiting for network interface provisioning to complete."
          Action: "RETRY"
        - OnReason: "*"
          Action: "EXIT"
      Parameters: { }
      ContainerProperties:
        Command:
          - sh
          - /batch_module/scripts/execute-jar-from-s3.sh
          - Ref::requestObject
        ExecutionRoleArn: !Ref EcsTaskExecutionRole
        JobRoleArn: !GetAtt JobDefinitionBatchExecutionRole.Arn
        ResourceRequirements:
          - Type: VCPU
            Value: 1
          - Type: MEMORY
            Value: 2048
        Secrets:
          - Name: SECRET_VALUE
            ValueFrom: !Ref DatabaseSecretArn
        FargatePlatformConfiguration:
          PlatformVersion: LATEST
        Image: !Ref ImageBatchSharedResourcesAccount
      Tags:
        {
          "ORGANIZATION": !Ref Organization,
          "PACKAGE": !Ref Package,
          "VERSION": !Ref Version,
          "ENVIRONMENT_TYPE": !Ref EnvironmentType,
          "ENVIRONMENT_ID": !Ref EnvironmentId,
          "TENANT_ID": !Ref TenantId,
          "PROJECT": !Ref Project,
          "MODULE": !Ref Module,
          "PROCESSING_TYPE": "BATCH",
        }

  StepHistoricalLogMonetaryTransactionsJobDefinition:
    Type: AWS::Batch::JobDefinition
    Properties:
      Type: container
      PlatformCapabilities:
        - FARGATE
      JobDefinitionName: !Sub ${EnvironmentId}-cobis-atm-job-definition-16202
      RetryStrategy:
        Attempts: 3
        EvaluateOnExit:
        - OnStatusReason: "Timeout waiting for network interface provisioning to complete."
          Action: "RETRY"
        - OnReason: "*"
          Action: "EXIT"
      Parameters: { }
      ContainerProperties:
        Command:
          - sh
          - /batch_module/scripts/execute-jar-from-s3.sh
          - Ref::requestObject
        ExecutionRoleArn: !Ref EcsTaskExecutionRole
        JobRoleArn: !GetAtt JobDefinitionBatchExecutionRole.Arn
        ResourceRequirements:
          - Type: VCPU
            Value: 1
          - Type: MEMORY
            Value: 2048
        Secrets:
          - Name: SECRET_VALUE
            ValueFrom: !Ref DatabaseSecretArn
        FargatePlatformConfiguration:
          PlatformVersion: LATEST
        Image: !Ref ImageBatchSharedResourcesAccount
      Tags:
        {
          "ORGANIZATION": !Ref Organization,
          "PACKAGE": !Ref Package,
          "VERSION": !Ref Version,
          "ENVIRONMENT_TYPE": !Ref EnvironmentType,
          "ENVIRONMENT_ID": !Ref EnvironmentId,
          "TENANT_ID": !Ref TenantId,
          "PROJECT": !Ref Project,
          "MODULE": !Ref Module,
          "PROCESSING_TYPE": "BATCH",
        }

  StepHistoricalTablesCompensationJobDefinition:
    Type: AWS::Batch::JobDefinition
    Properties:
      Type: container
      PlatformCapabilities:
        - FARGATE
      JobDefinitionName: !Sub ${EnvironmentId}-cobis-atm-job-definition-16203
      RetryStrategy:
        Attempts: 3
        EvaluateOnExit:
        - OnStatusReason: "Timeout waiting for network interface provisioning to complete."
          Action: "RETRY"
        - OnReason: "*"
          Action: "EXIT"
      Parameters: { }
      ContainerProperties:
        Command:
          - sh
          - /batch_module/scripts/execute-jar-from-s3.sh
          - Ref::requestObject
        ExecutionRoleArn: !Ref EcsTaskExecutionRole
        JobRoleArn: !GetAtt JobDefinitionBatchExecutionRole.Arn
        ResourceRequirements:
          - Type: VCPU
            Value: 1
          - Type: MEMORY
            Value: 2048
        Secrets:
          - Name: SECRET_VALUE
            ValueFrom: !Ref DatabaseSecretArn
        FargatePlatformConfiguration:
          PlatformVersion: LATEST
        Image: !Ref ImageBatchSharedResourcesAccount
      Tags:
        {
          "ORGANIZATION": !Ref Organization,
          "PACKAGE": !Ref Package,
          "VERSION": !Ref Version,
          "ENVIRONMENT_TYPE": !Ref EnvironmentType,
          "ENVIRONMENT_ID": !Ref EnvironmentId,
          "TENANT_ID": !Ref TenantId,
          "PROJECT": !Ref Project,
          "MODULE": !Ref Module,
          "PROCESSING_TYPE": "BATCH",
        }

  StepHistoricalTablesMerchantJobDefinition:
    Type: AWS::Batch::JobDefinition
    Properties:
      Type: container
      PlatformCapabilities:
        - FARGATE
      JobDefinitionName: !Sub ${EnvironmentId}-cobis-atm-job-definition-16204
      RetryStrategy:
        Attempts: 3
        EvaluateOnExit:
          - OnStatusReason: "Timeout waiting for network interface provisioning to complete."
            Action: "RETRY"
          - OnReason: "*"
            Action: "EXIT"
      Parameters: { }
      ContainerProperties:
        Command:
          - sh
          - /batch_module/scripts/execute-jar-from-s3.sh
          - Ref::requestObject
        ExecutionRoleArn: !Ref EcsTaskExecutionRole
        JobRoleArn: !GetAtt JobDefinitionBatchExecutionRole.Arn
        ResourceRequirements:
          - Type: VCPU
            Value: 1
          - Type: MEMORY
            Value: 2048
        Secrets:
          - Name: SECRET_VALUE
            ValueFrom: !Ref DatabaseSecretArn
        FargatePlatformConfiguration:
          PlatformVersion: LATEST
        Image: !Ref ImageBatchSharedResourcesAccount
      Tags:
        {
          "ORGANIZATION": !Ref Organization,
          "PACKAGE": !Ref Package,
          "VERSION": !Ref Version,
          "ENVIRONMENT_TYPE": !Ref EnvironmentType,
          "ENVIRONMENT_ID": !Ref EnvironmentId,
          "TENANT_ID": !Ref TenantId,
          "PROJECT": !Ref Project,
          "MODULE": !Ref Module,
          "PROCESSING_TYPE": "BATCH",
        }

  RegulatoryReportsJobDefinition:
    Type: AWS::Batch::JobDefinition
    Properties:
      Type: container
      PlatformCapabilities:
        - FARGATE
      JobDefinitionName: !Sub ${EnvironmentId}-atm-job-definition-16301
      RetryStrategy:
        Attempts: 3
        EvaluateOnExit:
        - OnStatusReason: "Timeout waiting for network interface provisioning to complete."
          Action: "RETRY"
        - OnReason: "*"
          Action: "EXIT"
      Parameters: { }
      ContainerProperties:
        Command:
          - sh
          - /batch_module/scripts/execute-jar-from-s3.sh
          - Ref::requestObject
        ExecutionRoleArn: !Ref EcsTaskExecutionRole
        JobRoleArn: !GetAtt JobDefinitionBatchExecutionRole.Arn
        ResourceRequirements:
          - Type: VCPU
            Value: 1
          - Type: MEMORY
            Value: 2048
        Secrets:
          - Name: SECRET_VALUE
            ValueFrom: !Ref DatabaseSecretArn
        FargatePlatformConfiguration:
          PlatformVersion: LATEST
        Image: !Ref ImageBatchSharedResourcesAccount
      Tags:
        {
          "ORGANIZATION": !Ref Organization,
          "PACKAGE": !Ref Package,
          "VERSION": !Ref Version,
          "ENVIRONMENT_TYPE": !Ref EnvironmentType,
          "ENVIRONMENT_ID": !Ref EnvironmentId,
          "TENANT_ID": !Ref TenantId,
          "PROJECT": !Ref Project,
          "MODULE": !Ref Module,
          "PROCESSING_TYPE": "BATCH",
        }

  ReportPaymentServicesJobDefinition:
    Type: AWS::Batch::JobDefinition
    Properties:
      Type: container
      PlatformCapabilities:
        - FARGATE
      JobDefinitionName: !Sub ${EnvironmentId}-atm-job-definition-16302
      RetryStrategy:
        Attempts: 3
        EvaluateOnExit:
          - OnStatusReason: "Timeout waiting for network interface provisioning to complete."
            Action: "RETRY"
          - OnReason: "*"
            Action: "EXIT"
      Parameters: { }
      ContainerProperties:
        Command:
          - sh
          - /batch_module/scripts/execute-jar-from-s3.sh
          - Ref::requestObject
        ExecutionRoleArn: !Ref EcsTaskExecutionRole
        JobRoleArn: !GetAtt JobDefinitionBatchExecutionRole.Arn
        ResourceRequirements:
          - Type: VCPU
            Value: 1
          - Type: MEMORY
            Value: 2048
        Secrets:
          - Name: SECRET_VALUE
            ValueFrom: !Ref DatabaseSecretArn
        FargatePlatformConfiguration:
          PlatformVersion: LATEST
        Image: !Ref ImageBatchSharedResourcesAccount
      Tags:
        {
          "ORGANIZATION": !Ref Organization,
          "PACKAGE": !Ref Package,
          "VERSION": !Ref Version,
          "ENVIRONMENT_TYPE": !Ref EnvironmentType,
          "ENVIRONMENT_ID": !Ref EnvironmentId,
          "TENANT_ID": !Ref TenantId,
          "PROJECT": !Ref Project,
          "MODULE": !Ref Module,
          "PROCESSING_TYPE": "BATCH",
        }

  ReportReconcileJobDefinition:
    Type: AWS::Batch::JobDefinition
    Properties:
      Type: container
      PlatformCapabilities:
        - FARGATE
      JobDefinitionName: !Sub ${EnvironmentId}-atm-job-definition-16401
      RetryStrategy:
        Attempts: 3
        EvaluateOnExit:
          - OnStatusReason: "Timeout waiting for network interface provisioning to complete."
            Action: "RETRY"
          - OnReason: "*"
            Action: "EXIT"
      Parameters: { }
      ContainerProperties:
        Command:
          - sh
          - /batch_module/scripts/execute-jar-from-s3.sh
          - Ref::requestObject
        ExecutionRoleArn: !Ref EcsTaskExecutionRole
        JobRoleArn: !GetAtt JobDefinitionBatchExecutionRole.Arn
        ResourceRequirements:
          - Type: VCPU
            Value: 1
          - Type: MEMORY
            Value: 2048
        Secrets:
          - Name: SECRET_VALUE
            ValueFrom: !Ref DatabaseSecretArn
        FargatePlatformConfiguration:
          PlatformVersion: LATEST
        Image: !Ref ImageBatchSharedResourcesAccount
      Tags:
        {
          "ORGANIZATION": !Ref Organization,
          "PACKAGE": !Ref Package,
          "VERSION": !Ref Version,
          "ENVIRONMENT_TYPE": !Ref EnvironmentType,
          "ENVIRONMENT_ID": !Ref EnvironmentId,
          "TENANT_ID": !Ref TenantId,
          "PROJECT": !Ref Project,
          "MODULE": !Ref Module,
          "PROCESSING_TYPE": "BATCH",
        }

  MerchantPaymentJobDefinition:
    Type: AWS::Batch::JobDefinition
    Properties:
      Type: container
      PlatformCapabilities:
        - FARGATE
      JobDefinitionName: !Sub ${EnvironmentId}-atm-job-definition-16402
      RetryStrategy:
        Attempts: 3
        EvaluateOnExit:
          - OnStatusReason: "Timeout waiting for network interface provisioning to complete."
            Action: "RETRY"
          - OnReason: "*"
            Action: "EXIT"
      Parameters: { }
      ContainerProperties:
        Command:
          - sh
          - /batch_module/scripts/execute-jar-from-s3.sh
          - Ref::requestObject
        ExecutionRoleArn: !Ref EcsTaskExecutionRole
        JobRoleArn: !GetAtt JobDefinitionBatchExecutionRole.Arn
        ResourceRequirements:
          - Type: VCPU
            Value: 1
          - Type: MEMORY
            Value: 2048
        Secrets:
          - Name: SECRET_VALUE
            ValueFrom: !Ref DatabaseSecretArn
        FargatePlatformConfiguration:
          PlatformVersion: LATEST
        Image: !Ref ImageBatchSharedResourcesAccount
      Tags:
        {
          "ORGANIZATION": !Ref Organization,
          "PACKAGE": !Ref Package,
          "VERSION": !Ref Version,
          "ENVIRONMENT_TYPE": !Ref EnvironmentType,
          "ENVIRONMENT_ID": !Ref EnvironmentId,
          "TENANT_ID": !Ref TenantId,
          "PROJECT": !Ref Project,
          "MODULE": !Ref Module,
          "PROCESSING_TYPE": "BATCH",
        }

  ReportPaymentMerchantJobDefinition:
    Type: AWS::Batch::JobDefinition
    Properties:
      Type: container
      PlatformCapabilities:
        - FARGATE
      JobDefinitionName: !Sub ${EnvironmentId}-atm-job-definition-16403
      RetryStrategy:
        Attempts: 3
        EvaluateOnExit:
          - OnStatusReason: "Timeout waiting for network interface provisioning to complete."
            Action: "RETRY"
          - OnReason: "*"
            Action: "EXIT"
      Parameters: { }
      ContainerProperties:
        Command:
          - sh
          - /batch_module/scripts/execute-jar-from-s3.sh
          - Ref::requestObject
        ExecutionRoleArn: !Ref EcsTaskExecutionRole
        JobRoleArn: !GetAtt JobDefinitionBatchExecutionRole.Arn
        ResourceRequirements:
          - Type: VCPU
            Value: 1
          - Type: MEMORY
            Value: 2048
        Secrets:
          - Name: SECRET_VALUE
            ValueFrom: !Ref DatabaseSecretArn
        FargatePlatformConfiguration:
          PlatformVersion: LATEST
        Image: !Ref ImageBatchSharedResourcesAccount
      Tags:
        {
          "ORGANIZATION": !Ref Organization,
          "PACKAGE": !Ref Package,
          "VERSION": !Ref Version,
          "ENVIRONMENT_TYPE": !Ref EnvironmentType,
          "ENVIRONMENT_ID": !Ref EnvironmentId,
          "TENANT_ID": !Ref TenantId,
          "PROJECT": !Ref Project,
          "MODULE": !Ref Module,
          "PROCESSING_TYPE": "BATCH",
        }

  ReportPaymentMerchantNequiJobDefinition:
    Type: AWS::Batch::JobDefinition
    Properties:
      Type: container
      PlatformCapabilities:
        - FARGATE
      JobDefinitionName: !Sub ${EnvironmentId}-atm-job-definition-16404
      RetryStrategy:
        Attempts: 3
        EvaluateOnExit:
          - OnStatusReason: "Timeout waiting for network interface provisioning to complete."
            Action: "RETRY"
          - OnReason: "*"
            Action: "EXIT"
      Parameters: { }
      ContainerProperties:
        Command:
          - sh
          - /batch_module/scripts/execute-jar-from-s3.sh
          - Ref::requestObject
        ExecutionRoleArn: !Ref EcsTaskExecutionRole
        JobRoleArn: !GetAtt JobDefinitionBatchExecutionRole.Arn
        ResourceRequirements:
          - Type: VCPU
            Value: 1
          - Type: MEMORY
            Value: 2048
        Secrets:
          - Name: SECRET_VALUE
            ValueFrom: !Ref DatabaseSecretArn
        FargatePlatformConfiguration:
          PlatformVersion: LATEST
        Image: !Ref ImageBatchSharedResourcesAccount
      Tags:
        {
          "ORGANIZATION": !Ref Organization,
          "PACKAGE": !Ref Package,
          "VERSION": !Ref Version,
          "ENVIRONMENT_TYPE": !Ref EnvironmentType,
          "ENVIRONMENT_ID": !Ref EnvironmentId,
          "TENANT_ID": !Ref TenantId,
          "PROJECT": !Ref Project,
          "MODULE": !Ref Module,
          "PROCESSING_TYPE": "BATCH",
        }

  ReportPaymentMerchantTcJobDefinition:
    Type: AWS::Batch::JobDefinition
    Properties:
      Type: container
      PlatformCapabilities:
        - FARGATE
      JobDefinitionName: !Sub ${EnvironmentId}-atm-job-definition-16405
      RetryStrategy:
        Attempts: 3
        EvaluateOnExit:
          - OnStatusReason: "Timeout waiting for network interface provisioning to complete."
            Action: "RETRY"
          - OnReason: "*"
            Action: "EXIT"
      Parameters: { }
      ContainerProperties:
        Command:
          - sh
          - /batch_module/scripts/execute-jar-from-s3.sh
          - Ref::requestObject
        ExecutionRoleArn: !Ref EcsTaskExecutionRole
        JobRoleArn: !GetAtt JobDefinitionBatchExecutionRole.Arn
        ResourceRequirements:
          - Type: VCPU
            Value: 1
          - Type: MEMORY
            Value: 2048
        Secrets:
          - Name: SECRET_VALUE
            ValueFrom: !Ref DatabaseSecretArn
        FargatePlatformConfiguration:
          PlatformVersion: LATEST
        Image: !Ref ImageBatchSharedResourcesAccount
      Tags:
        {
          "ORGANIZATION": !Ref Organization,
          "PACKAGE": !Ref Package,
          "VERSION": !Ref Version,
          "ENVIRONMENT_TYPE": !Ref EnvironmentType,
          "ENVIRONMENT_ID": !Ref EnvironmentId,
          "TENANT_ID": !Ref TenantId,
          "PROJECT": !Ref Project,
          "MODULE": !Ref Module,
          "PROCESSING_TYPE": "BATCH",
        }

  HistoricalStepLogtranAtmJobDefinition:
    Type: AWS::Batch::JobDefinition
    Properties:
      Type: container
      PlatformCapabilities:
        - FARGATE
      JobDefinitionName: !Sub ${EnvironmentId}-atm-job-definition-16406
      RetryStrategy:
        Attempts: 3
        EvaluateOnExit:
          - OnStatusReason: "Timeout waiting for network interface provisioning to complete."
            Action: "RETRY"
          - OnReason: "*"
            Action: "EXIT"
      Parameters: { }
      ContainerProperties:
        Command:
          - sh
          - /batch_module/scripts/execute-jar-from-s3.sh
          - Ref::requestObject
        ExecutionRoleArn: !Ref EcsTaskExecutionRole
        JobRoleArn: !GetAtt JobDefinitionBatchExecutionRole.Arn
        ResourceRequirements:
          - Type: VCPU
            Value: 1
          - Type: MEMORY
            Value: 2048
        Secrets:
          - Name: SECRET_VALUE
            ValueFrom: !Ref DatabaseSecretArn
        FargatePlatformConfiguration:
          PlatformVersion: LATEST
        Image: !Ref ImageBatchSharedResourcesAccount
      Tags:
        {
          "ORGANIZATION": !Ref Organization,
          "PACKAGE": !Ref Package,
          "VERSION": !Ref Version,
          "ENVIRONMENT_TYPE": !Ref EnvironmentType,
          "ENVIRONMENT_ID": !Ref EnvironmentId,
          "TENANT_ID": !Ref TenantId,
          "PROJECT": !Ref Project,
          "MODULE": !Ref Module,
          "PROCESSING_TYPE": "BATCH",
        }

  HistoricalStepTranmonetAtmJobDefinition:
    Type: AWS::Batch::JobDefinition
    Properties:
      Type: container
      PlatformCapabilities:
        - FARGATE
      JobDefinitionName: !Sub ${EnvironmentId}-atm-job-definition-16407
      RetryStrategy:
        Attempts: 3
        EvaluateOnExit:
          - OnStatusReason: "Timeout waiting for network interface provisioning to complete."
            Action: "RETRY"
          - OnReason: "*"
            Action: "EXIT"
      Parameters: { }
      ContainerProperties:
        Command:
          - sh
          - /batch_module/scripts/execute-jar-from-s3.sh
          - Ref::requestObject
        ExecutionRoleArn: !Ref EcsTaskExecutionRole
        JobRoleArn: !GetAtt JobDefinitionBatchExecutionRole.Arn
        ResourceRequirements:
          - Type: VCPU
            Value: 1
          - Type: MEMORY
            Value: 2048
        Secrets:
          - Name: SECRET_VALUE
            ValueFrom: !Ref DatabaseSecretArn
        FargatePlatformConfiguration:
          PlatformVersion: LATEST
        Image: !Ref ImageBatchSharedResourcesAccount
      Tags:
        {
          "ORGANIZATION": !Ref Organization,
          "PACKAGE": !Ref Package,
          "VERSION": !Ref Version,
          "ENVIRONMENT_TYPE": !Ref EnvironmentType,
          "ENVIRONMENT_ID": !Ref EnvironmentId,
          "TENANT_ID": !Ref TenantId,
          "PROJECT": !Ref Project,
          "MODULE": !Ref Module,
          "PROCESSING_TYPE": "BATCH",
        }
  #------------------------------------------- End: JobDefinition -------------------------------------------

#  BatchStateMachinePolicy:
#    Type: 'AWS::IAM::Policy'
#    Properties:
#      PolicyName: !Sub "${EnvironmentId}-${Module}-Batch-StepFunction-Policies"
#      Roles:
#        - !Ref StepFunctionRole
#      PolicyDocument:
#        Version: 2012-10-17
#        Statement:
#          - Effect: Allow
#            Action:
#              - 'logs:CreateLogGroup'
#              - 'logs:CreateLogStream'
#              - 'logs:PutLogEvents'
#              - 'logs:CreateLogStream'
#              - 'logs:PutLogEvents'
#              - 'logs:PutLogEventsBatch'
#            #Resource: '*'
#            # Validacion de seguridad
#            Resource:
#              - "arn:aws:logs:*:*:*"
#          - Effect: Allow
#            Action:
#              - 'states:StartExecution'
#              - 'states:DescribeExecution'
#              - 'states:ListStateMachines'
#              - 'states:StopExecution'
#              - 'states:DescribeStateMachineForExecution'
#              - 'states:DescribeActivity'
#              - 'states:DescribeStateMachine'
#              - 'states:ListExecutions'
#              - 'states:GetExecutionHistory'
#              - 'states:ListTagsForResource'
#            Resource:
#              - 'arn:aws:states:*:*:activity:*'
#              - 'arn:aws:states:*:*:execution:*:*'
#              - 'arn:aws:states:*:*:stateMachine:*'
#          - Effect: Allow
#            Action:
#              - 'events:PutTargets'
#              - 'events:PutRule'
#              - 'events:DescribeRule'
#            #Resource: '*'
#            # Validacion de seguridad
#            Resource:
#              - "arn:aws:events:*:*:*"
#          - Effect: Allow
#            Action:
#              - 'lambda:InvokeFunction'
#            #Resource: '*'
#            # Validacion de seguridad
#            Resource:
#              - "arn:aws:lambda:*:*:function:*"
#          - Effect: Allow
#            Action:
#              - 'batch:submitJob'
#            #Resource: '*'
#            Resource:
#              - "arn:aws:batch:*:*:*"

  #------------------------------------------- Begin: Step Functions -------------------------------------------
  HistoricStepStateMachine:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      StateMachineName: !Sub ${EnvironmentId}-atm-mesh-16200-historic-step
      RoleArn: !Sub  "arn:aws:iam::${AwsAccountIdToDeploy}:role/${EnvironmentId}-GeneralStateMachineRole"
      Tags:
        - Key: "ORGANIZATION"
          Value: !Ref Organization
        - Key: "PACKAGE"
          Value: !Ref Package
        - Key: "VERSION"
          Value: !Ref Version
        - Key: "ENVIRONMENT_TYPE"
          Value: !Ref EnvironmentType
        - Key: "ENVIRONMENT_ID"
          Value: !Ref EnvironmentId
        - Key: "TENANT_ID"
          Value: !Ref TenantId
        - Key: "PROJECT"
          Value: !Ref Project
        - Key: "MODULE"
          Value: !Ref Module
        - Key: "PROCESSING_TYPE"
          Value: "BATCH"
      DefinitionString: !Sub |-
        {
          "Comment": "Realizar el paso a históricos para ATM",
          "StartAt": "Get Parameters",
          "States": {
            "Get Parameters": {
              "Type": "Task",
              "Resource": "arn:aws:lambda:${RegionToDeploy}:${AwsAccountIdToDeploy}:function:${EnvironmentId}-cobis-batch-get-job-parameters",
              "Parameters": {
                  "meshId": "16200"
              },
              "ResultPath": "$",
              "Next": "PasoAHistoricos"
            },
            "PasoAHistoricos": {
              "Type": "Parallel",
              "OutputPath": "$.[0]",
              "Branches": [
                {
                  "StartAt": "16201",
                  "States": {
                    "16201": {
                      "Type": "Task",
                      "InputPath": "$.[?(@.jobId == '16201')]",
                      "ResultPath": null,
                      "Resource": "arn:aws:states:::states:startExecution.sync",
                      "Parameters": {
                        "StateMachineArn": "arn:aws:states:${RegionToDeploy}:${AwsAccountIdToDeploy}:stateMachine:${EnvironmentIdBase}-cobis-batch-business_logic_execution_flow",
                        "Input.$": "$.[0]"
                      },
                      "End": true
                    }
                  }
                },
                {
                  "StartAt": "16202",
                  "States": {
                    "16202": {
                      "Type": "Task",
                      "InputPath": "$.[?(@.jobId == '16202')]",
                      "ResultPath": null,
                      "Resource": "arn:aws:states:::states:startExecution.sync",
                      "Parameters": {
                        "StateMachineArn": "arn:aws:states:${RegionToDeploy}:${AwsAccountIdToDeploy}:stateMachine:${EnvironmentIdBase}-cobis-batch-business_logic_execution_flow",
                        "Input.$": "$.[0]"
                      },
                      "End": true
                    }
                  }
                },
                {
                  "StartAt": "16203",
                  "States": {
                    "16203": {
                      "Type": "Task",
                      "InputPath": "$.[?(@.jobId == '16203')]",
                      "ResultPath": null,
                      "Resource": "arn:aws:states:::states:startExecution.sync",
                      "Parameters": {
                        "StateMachineArn": "arn:aws:states:${RegionToDeploy}:${AwsAccountIdToDeploy}:stateMachine:${EnvironmentIdBase}-cobis-batch-business_logic_execution_flow",
                        "Input.$": "$.[0]"
                      },
                      "End": true
                    }
                  }
                },
                {
                  "StartAt": "16204",
                  "States": {
                    "16204": {
                      "Type": "Task",
                      "InputPath": "$.[?(@.jobId == '16204')]",
                      "ResultPath": null,
                      "Resource": "arn:aws:states:::states:startExecution.sync",
                      "Parameters": {
                        "StateMachineArn": "arn:aws:states:${RegionToDeploy}:${AwsAccountIdToDeploy}:stateMachine:${EnvironmentIdBase}-cobis-batch-business_logic_execution_flow",
                        "Input.$": "$.[0]"
                      },
                      "End": true
                    }
                  }
                }
              ],
              "End": true
            }
          }
        }

  MonthlyProcessesStateMachine:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      StateMachineName: !Sub ${EnvironmentId}-atm-mesh-16300-monthly-processes
      RoleArn: !Sub  "arn:aws:iam::${AwsAccountIdToDeploy}:role/${EnvironmentId}-GeneralStateMachineRole"
      Tags:
        - Key: "ORGANIZATION"
          Value: !Ref Organization
        - Key: "PACKAGE"
          Value: !Ref Package
        - Key: "VERSION"
          Value: !Ref Version
        - Key: "ENVIRONMENT_TYPE"
          Value: !Ref EnvironmentType
        - Key: "ENVIRONMENT_ID"
          Value: !Ref EnvironmentId
        - Key: "TENANT_ID"
          Value: !Ref TenantId
        - Key: "PROJECT"
          Value: !Ref Project
        - Key: "MODULE"
          Value: !Ref Module
        - Key: "PROCESSING_TYPE"
          Value: "BATCH"
      DefinitionString: !Sub |-
        {
          "Comment": "Reporte de procesos Mensuales",
          "StartAt": "Get Parameters",
          "States": {
            "Get Parameters": {
              "Type": "Task",
              "Resource": "arn:aws:lambda:${RegionToDeploy}:${AwsAccountIdToDeploy}:function:${EnvironmentId}-cobis-batch-get-job-parameters",
              "Parameters": {
                  "meshId": "16300"
              },
              "ResultPath": "$",
              "Next": "ProcesosMensuales"
            },
            "ProcesosMensuales": {
              "Type": "Parallel",
              "OutputPath": "$.[0]",
              "Branches": [
                {
                  "StartAt": "16301",
                  "States": {
                    "16301": {
                      "Type": "Task",
                      "InputPath": "$.[?(@.jobId == '16301')]",
                      "ResultPath": null,
                      "Resource": "arn:aws:states:::states:startExecution.sync",
                      "Parameters": {
                        "StateMachineArn": "arn:aws:states:${RegionToDeploy}:${AwsAccountIdToDeploy}:stateMachine:${EnvironmentIdBase}-cobis-batch-business_logic_execution_flow",
                        "Input.$": "$.[0]"
                      },
                      "End": true
                    }
                  }
                },
                {
                  "StartAt": "16302",
                  "States": {
                    "16302": {
                      "Type": "Task",
                      "InputPath": "$.[?(@.jobId == '16302')]",
                      "ResultPath": null,
                      "Resource": "arn:aws:states:::states:startExecution.sync",
                      "Parameters": {
                        "StateMachineArn": "arn:aws:states:${RegionToDeploy}:${AwsAccountIdToDeploy}:stateMachine:${EnvironmentIdBase}-cobis-batch-business_logic_execution_flow",
                        "Input.$": "$.[0]"
                      },
                      "End": true
                    }
                  }
                }
              ],
              "End": true
            }
          }
        }

  DailyProcessesStateMachine:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      StateMachineName: !Sub ${EnvironmentId}-atm-mesh-16400-daily-processes
      RoleArn: !Sub  "arn:aws:iam::${AwsAccountIdToDeploy}:role/${EnvironmentId}-GeneralStateMachineRole"
      Tags:
        - Key: "ORGANIZATION"
          Value: !Ref Organization
        - Key: "PACKAGE"
          Value: !Ref Package
        - Key: "VERSION"
          Value: !Ref Version
        - Key: "ENVIRONMENT_TYPE"
          Value: !Ref EnvironmentType
        - Key: "ENVIRONMENT_ID"
          Value: !Ref EnvironmentId
        - Key: "TENANT_ID"
          Value: !Ref TenantId
        - Key: "PROJECT"
          Value: !Ref Project
        - Key: "MODULE"
          Value: !Ref Module
        - Key: "PROCESSING_TYPE"
          Value: "BATCH"
      DefinitionString: !Sub |-
        {
          "Comment": "Reporte de los procesos diarios",
          "StartAt": "Get Parameters",
          "States": {
            "Get Parameters": {
              "Type": "Task",
              "Resource": "arn:aws:lambda:${RegionToDeploy}:${AwsAccountIdToDeploy}:function:${EnvironmentId}-cobis-batch-get-job-parameters",
              "Parameters": {
                  "meshId": "16400"
              },
              "ResultPath": "$",
              "Next": "ProcesosDiarios"
            },
            "ProcesosDiarios": {
              "Type": "Parallel",
              "OutputPath": "$.[0]",
              "Branches": [
                {
                  "StartAt": "16401",
                  "States": {
                    "16401": {
                      "Type": "Task",
                      "InputPath": "$.[?(@.jobId == '16401')]",
                      "ResultPath": null,
                      "Resource": "arn:aws:states:::states:startExecution.sync",
                      "Parameters": {
                        "StateMachineArn": "arn:aws:states:${RegionToDeploy}:${AwsAccountIdToDeploy}:stateMachine:${EnvironmentIdBase}-cobis-batch-business_logic_execution_flow",
                        "Input.$": "$.[0]"
                      },
                      "End": true
                    }
                  }
                },
                {
                  "StartAt": "16403",
                  "States": {
                    "16403": {
                      "Type": "Task",
                      "InputPath": "$.[?(@.jobId == '16403')]",
                      "ResultPath": null,
                      "Resource": "arn:aws:states:::states:startExecution.sync",
                      "Parameters": {
                        "StateMachineArn": "arn:aws:states:${RegionToDeploy}:${AwsAccountIdToDeploy}:stateMachine:${EnvironmentIdBase}-cobis-batch-business_logic_execution_flow",
                        "Input.$": "$.[0]"
                      },
                      "End": true
                    }
                  }
                },
                {
                  "StartAt": "16404",
                  "States": {
                    "16404": {
                      "Type": "Task",
                      "InputPath": "$.[?(@.jobId == '16404')]",
                      "ResultPath": null,
                      "Resource": "arn:aws:states:::states:startExecution.sync",
                      "Parameters": {
                        "StateMachineArn": "arn:aws:states:${RegionToDeploy}:${AwsAccountIdToDeploy}:stateMachine:${EnvironmentIdBase}-cobis-batch-business_logic_execution_flow",
                        "Input.$": "$.[0]"
                      },
                      "End": true
                    }
                  }
                },
                {
                  "StartAt": "16405",
                  "States": {
                    "16405": {
                      "Type": "Task",
                      "InputPath": "$.[?(@.jobId == '16405')]",
                      "ResultPath": null,
                      "Resource": "arn:aws:states:::states:startExecution.sync",
                      "Parameters": {
                        "StateMachineArn": "arn:aws:states:${RegionToDeploy}:${AwsAccountIdToDeploy}:stateMachine:${EnvironmentIdBase}-cobis-batch-business_logic_execution_flow",
                        "Input.$": "$.[0]"
                      },
                      "End": true
                    }
                  }
                },
                {
                  "StartAt": "16406",
                  "States": {
                    "16406": {
                      "Type": "Task",
                      "InputPath": "$.[?(@.jobId == '16406')]",
                      "ResultPath": null,
                      "Resource": "arn:aws:states:::states:startExecution.sync",
                      "Parameters": {
                        "StateMachineArn": "arn:aws:states:${RegionToDeploy}:${AwsAccountIdToDeploy}:stateMachine:${EnvironmentIdBase}-cobis-batch-business_logic_execution_flow",
                        "Input.$": "$.[0]"
                      },
                      "End": true
                    }
                  }
                },
                {
                  "StartAt": "16407",
                  "States": {
                    "16407": {
                      "Type": "Task",
                      "InputPath": "$.[?(@.jobId == '16407')]",
                      "ResultPath": null,
                      "Resource": "arn:aws:states:::states:startExecution.sync",
                      "Parameters": {
                        "StateMachineArn": "arn:aws:states:${RegionToDeploy}:${AwsAccountIdToDeploy}:stateMachine:${EnvironmentIdBase}-cobis-batch-business_logic_execution_flow",
                        "Input.$": "$.[0]"
                      },
                      "End": true
                    }
                  }
                }
              ],
              "End": true
            }
          }
        }

  ReportPaymentMerchantLoadingConceptStateMachine:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      StateMachineName: !Sub ${EnvironmentId}-atm-mesh-16450-file-processing
      RoleArn: !Sub  "arn:aws:iam::${AwsAccountIdToDeploy}:role/${EnvironmentId}-GeneralStateMachineRole"
      Tags:
        - Key: "ORGANIZATION"
          Value: !Ref Organization
        - Key: "PACKAGE"
          Value: !Ref Package
        - Key: "VERSION"
          Value: !Ref Version
        - Key: "ENVIRONMENT_TYPE"
          Value: !Ref EnvironmentType
        - Key: "ENVIRONMENT_ID"
          Value: !Ref EnvironmentId
        - Key: "TENANT_ID"
          Value: !Ref TenantId
        - Key: "PROJECT"
          Value: !Ref Project
        - Key: "MODULE"
          Value: !Ref Module
        - Key: "PROCESSING_TYPE"
          Value: "BATCH"
      DefinitionString: !Sub |-
        {
          "Comment": "Reporte archivo Pagos de Comercio Cargar Concepto",
          "StartAt": "16402",
          "States": {
            "16402": {
              "Type": "Task",
              "InputPath": "$.[?(@.jobId == '16402')]",
              "ResultPath": null,
              "Resource": "arn:aws:states:::states:startExecution.sync",
              "Parameters": {
                "StateMachineArn": "arn:aws:states:${RegionToDeploy}:${AwsAccountIdToDeploy}:stateMachine:${EnvironmentId}-cobis-batch-business_logic_execution_flow",
                "Input.$": "$.[0]"
              },
              "End": true
            }
          }
        }
  #------------------------------------------- End: Step Functions -------------------------------------------

  #------------------------------------------- Begin: Batch Compute Environment  -------------------------------------------
  ValidateFileComputeEnvironment:
    Type: AWS::Batch::ComputeEnvironment
    Properties:
      ComputeEnvironmentName: !Sub "${EnvironmentId}-atm-batch-environment"
      ComputeResources:
        SecurityGroupIds: [ !Ref SecurityGroupIds ]
        Subnets: !Ref SubnetIds
        MaxvCpus: 160
        Type: FARGATE
      ServiceRole: !Ref AWSBatchServiceRole
      Type: MANAGED
      Tags:
        {
          "ORGANIZATION": !Ref Organization,
          "PACKAGE": !Ref Package,
          "VERSION": !Ref Version,
          "ENVIRONMENT_TYPE": !Ref EnvironmentType,
          "ENVIRONMENT_ID": !Ref EnvironmentId,
          "TENANT_ID": !Ref TenantId,
          "PROJECT": !Ref Project,
          "MODULE": !Ref Module,
          "PROCESSING_TYPE": !Ref ProcessingType,
        }

  ValidateFileJobQueue:
    Type: AWS::Batch::JobQueue
    Properties:
      ComputeEnvironmentOrder:
        - Order: 1
          ComputeEnvironment: !Ref ValidateFileComputeEnvironment
      JobQueueName: !Sub "${EnvironmentId}-atm-batch-queue"
      Priority: 1
      State: ENABLED
      Tags:
        {
          "ORGANIZATION": !Ref Organization,
          "PACKAGE": !Ref Package,
          "VERSION": !Ref Version,
          "ENVIRONMENT_TYPE": !Ref EnvironmentType,
          "ENVIRONMENT_ID": !Ref EnvironmentId,
          "TENANT_ID": !Ref TenantId,
          "PROJECT": !Ref Project,
          "MODULE": !Ref Module,
          "PROCESSING_TYPE": !Ref ProcessingType,
        }
  #------------------------------------------- End: Batch Compute Environment  -------------------------------------------