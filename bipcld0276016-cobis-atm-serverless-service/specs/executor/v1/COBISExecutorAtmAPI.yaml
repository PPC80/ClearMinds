openapi: 3.0.0

info:
  title:
    Fn::Sub: ${EnvironmentId} - COBIS ATM executor API
  ##apiCode: AW001
  description: 'Este es el API del sistema transaccional de cuentas del Core Banking System. Se encuentran definidos los servicios esenciales para realizar las operaciones transaccionales del producto de Cuentas de Depósitos a la Vista, y permite gestionar las operaciones de cuentas de un sistema financiero. Puedes conseguir mas información en nuestra sitio web: [http://www.cobiscorp.com](http://www.cobiscorp.com).' # TODO: Actualizar enlace al sitio del producto de cuentas o mejor de APIs.
  version: 1.0.0
  termsOfService: http://cobiscorp.com/terms/cobisapi # TODO: Términos de servicio
  contact:
    name: COBIS Support Center
    url: http://www.cobiscorp.com/contact-us/customer-technical-support/
    email: support.center@cobiscorp.com
  license:
    name: COBIS API License # TODO: Definir el tipo y nombre de la licencia. Condiciones de uso y Legal
    url: http://www.cobiscorp.com/licenses/LICENSE-1.0.html # TODO: Publicar licencia.

servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/test33787/final/1.0.0
  - url: http://staging-cobisapi.cobiscorp.com/v1
    description: Internal staging server for testing

##########################################################
##                       FOR AWS                        ##
##########################################################
# Validación de solicitudes desde el API Gateway

x-amazon-apigateway-request-validators:
  all:
    validateRequestBody: true
    validateRequestParameters: true
  params-only:
    validateRequestBody: false
    validateRequestParameters: true

# Por defecto valida todas las operaciones, tanto parámetros como cuerpo del mensaje.
#x-amazon-apigateway-request-validator: "all"
##########################################################

tags:
  - name: Executor
    description: 'Operaciones de gestión de transferencias sobre cuentas.'
    # Puede incluirse más documentación
    #externalDocs:
    #  description: 'Encuentre más información en'
    #  url: http://www.cobiscorp.com/

security:
  - api_key: []
  - authorizer: []

paths:

  /atm/executor:
    post:
      x-amazon-apigateway-request-validator: all
      tags:
        - Executor
      security:
        - api_key: []
        - authorizer: []      
      summary: 'Realiza ejecucion generica de logica de negocios de atm'
      description: 'Realiza ejecucion generica de logica de negocios de atm'
      operationId: AtmExecutor
      parameters:
        # HEADER REQUEST
        - $ref: 'COBISGeneralComponents-v1-0-1.json#/components/parameters/x-request-id'
        - $ref: 'COBISGeneralComponents-v1-0-1.json#/components/parameters/x-financial-id'
        - $ref: 'COBISGeneralComponents-v1-0-1.json#/components/parameters/x-end-user-login'
        - $ref: 'COBISGeneralComponents-v1-0-1.json#/components/parameters/x-end-user-request-date-time'
        - $ref: 'COBISGeneralComponents-v1-0-1.json#/components/parameters/x-end-user-terminal'
        - $ref: 'COBISGeneralComponents-v1-0-1.json#/components/parameters/x-end-user-last-logged-date-time'
        - $ref: 'COBISGeneralComponents-v1-0-1.json#/components/parameters/x-jws-signature'
        - $ref: 'COBISGeneralComponents-v1-0-1.json#/components/parameters/Accept-Language'
        - $ref: 'COBISGeneralComponents-v1-0-1.json#/components/parameters/x-channel'
        - name: x-reverse
          description: "Indicador de ejecución de reverso de una transacción. Valores:['true,'false']. Default: 'false'. <b>Aplica Reverso</b>."
          in: header
          schema:
            type: string
        - $ref: 'COBISGeneralComponents-v1-0-1.json#/components/parameters/x-requestId-to-reverse'
      # BODY REQUEST
      requestBody:
        description: 'Datos para realizar la nota débito a la cuenta.'
        required: true
        content:
          application/json:
            schema:
              $ref: 'COBISAdminDomain-v1-1-0.yaml#/components/schemas/ProcedureRequest'
            example: # TODO: Ajustar request.
              token: 'eyJhbGciOiJIUzUxMiJ9.eyJzZXJ2ZXIiOiJDVFNTUlYiLCJyb2xlIjo...'
              spName: 'cob_atm..sp_qa_arbol'
              params:
                - name: "@t_trn"
                  dataType: 52
                  ioType: 0
                  isNull: false
                  value: "690"
                  len: 0
                - name: "@i_operacion"
                  dataType: 47
                  ioType: 0
                  isNull: false
                  value: "Q"
                  len: 0
                - name: "@i_requestId"
                  dataType: 39
                  ioType: 0
                  isNull: false
                  value: "b1980e73-dfee-492b-98d9-46231f6bb173"
                  len: 0
      responses:
        201:
          description: 'Se ha realizado la transacción exitosamente.'
          headers:
            x-correlation-id:
              $ref: 'COBISGeneralComponents-v1-0-1.json#/components/headers/x-correlation-id'
            x-jws-signature:
              $ref: 'COBISGeneralComponents-v1-0-1.json#/components/headers/x-jws-signature'
            Content-Language:
              $ref: 'COBISGeneralComponents-v1-0-1.json#/components/headers/Content-Language'
          content:
            application/json:
              schema:
                $ref: 'COBISAdminDomain-v1-1-0.yaml#/components/schemas/ProcedureResponse'
              example:
                returnCode: 0
                params: []
                messages: []
                status: false
                resultSets:
                  - metaData:
                      columns:
                        - name: "4"
                          type: -5
                          length: 1
                        - name: "S"
                          type: 12
                          length: 1
                    data:
                      rows:
                        - colimnData:
                            - value: "4"
                              isNull: false
                            - value: "S"
                              isNull: false
                  - metaData:
                      columns:
                        - name: "3"
                          type: -5
                          length: 1
                        - name: "S"
                          type: 12
                          length: 1
                    data:
                      rows:
                        - colimnData:
                            - value: "3"
                              isNull: false
                            - value: "S"
                              isNull: false

        400:
          $ref: 'COBISGeneralComponents-v1-0-1.json#/components/responses/400BadRequest'
        401:
          $ref: 'COBISGeneralComponents-v1-0-1.json#/components/responses/401Unauthorized'
        403:
          $ref: 'COBISGeneralComponents-v1-0-1.json#/components/responses/403Forbidden'
        404:
          $ref: 'COBISGeneralComponents-v1-0-1.json#/components/responses/404NotFound'
        405:
          $ref: 'COBISGeneralComponents-v1-0-1.json#/components/responses/405MethodNotAllowed'
        406:
          $ref: 'COBISGeneralComponents-v1-0-1.json#/components/responses/406NotAcceptable'
        409:
          description:  >
            La operación presentó un error durante la ejecución.
              * 253082: Monto inválido.
              * 250120: La transacción no puede ser reversada.
              * 251068: Valor de la transacción no puede ser cero.
              * 101042: No existe prospecto o cédula incorrecta.
              * 201030: Causa no existe.
              * 251067: Transacción origen del reverso no coincide o transacción ya reversada.
              * 251057: La cuenta está cerrada.
              * 251101: Error en validación de depósito inicial.
              * 251058: La cuenta está inactiva.
              * 251125: No existe causal.
              * 251029: Moneda no corresponde a cuenta.
              * 351527: No existe producto final.
              * 252077: El crédito a la cuenta excede el saldo máximo permitido.
              * 250119: El monto total de transacciones de la cuenta excede al monto maximo permitido.
              * 251033: Fondos insuficientes.
              * 253000: Error en inserción de transacción monetaria.
              * 253004: Error en inserción de transacción de servicio.
              * 255001: Error al actualizar cuenta.
              * 253002: Error en inserción de línea pendiente.
              * 255005: Error al actualizar Nro. Control.
              * 251012: Error en tabla de alícuotas.
              * 201196: Parámetro no encontrado.
              * 201048: Error en código de transacción.
              * 101190: No existe Default para País.
              * 252093: Error en reintegro de GMF.
          content:
            application/json:
              schema:
                $ref: 'COBISGeneralComponents-v1-0-1.json#/components/schemas/ErrorResponseDetail'

              example:
                message:  'La operación presentó un error durante la ejecución.'
                error:
                  - error:
                      code: 251101
                      message:  'La cuenta está inactiva.'
        429:
          $ref: 'COBISGeneralComponents-v1-0-1.json#/components/responses/429TooManyRequests'
        500:
          $ref: 'COBISGeneralComponents-v1-0-1.json#/components/responses/500InternalServerError'
      x-amazon-apigateway-integration:
        type: aws
        httpMethod: POST
        uri:
          Fn::Join:
            - ''
            - - Fn::Sub: "arn:aws:apigateway:${RegionToDeploy}:lambda:path/2015-03-31/functions/${AtmExecutor.Arn}:"
              - "${stageVariables.version_alias}/invocations"
        passthroughBehavior: WHEN_NO_TEMPLATES
        requestTemplates:
          application/json: |-
            $input.json('$')
        responses:
          default:
            statusCode: 201
            responseParameters:
              method.response.header.x-correlation-id: integration.response.body.header.x_correlation_id
            responseTemplates:
              application/json: |-
                #set($res = $input.path('$'))
                $input.json('$')
          400:
            statusCode: 400
            responseParameters:
              method.response.header.x-correlation-id: integration.response.body.header.x_correlation_id
            responseTemplates:
              application/json: |-
                {"message": "El mensaje de solicitud no se encuentra debidamente formateado."}
          401:
            statusCode: 401
            responseParameters:
              method.response.header.x-correlation-id: integration.response.body.header.x_correlation_id
            responseTemplates:
              application/json: |-
                {"message": "No se encuentra autorizado para ejecutar la operación."}
          403:
            statusCode: 403
            responseParameters:
              method.response.header.x-correlation-id: integration.response.body.header.x_correlation_id
            responseTemplates:
              application/json: |-
                {"message": "La solicitud ha sido denegada."}
          404:
            statusCode: 404
            responseParameters:
              method.response.header.x-correlation-id: integration.response.body.header.x_correlation_id
            responseTemplates:
              application/json: |-
                {"message": "El objeto no fue encontrado."}
          405:
            statusCode: 405
            responseParameters:
              method.response.header.x-correlation-id: integration.response.body.header.x_correlation_id
            responseTemplates:
              application/json: |-
                {"message": "La operación no se encuentra soportada."}
          406:
            statusCode: 406
            responseParameters:
              method.response.header.x-correlation-id: integration.response.body.header.x_correlation_id
            responseTemplates:
              application/json: |-
                {"message": "La solicitud no fue aceptada."}
          409:
            statusCode: 409
            responseParameters:
              method.response.header.x-correlation-id: integration.response.body.header.x_correlation_id
            responseTemplates:
              application/json: |-
                ##Definición de variables de entrada
                #set($cause = $input.path('$.cause'))
                {
                    "message": "La operación presentó un error durante la ejecución.",
                    "error" : $cause.errorMessage
                }
          429:
            statusCode: 429
            responseParameters:
              method.response.header.x-correlation-id: integration.response.body.header.x_correlation_id
            responseTemplates:
              application/json: |-
                {"message": "Se han realizado demasiadas solicitudes."}
          500|.*timed.*:
            statusCode: 500
            responseParameters:
              method.response.header.x-correlation-id: integration.response.body.header.x_correlation_id
            responseTemplates:
              application/json: |-
                {"message": "Se presentó un error durante el procesamiento de la solicitud."}
components:
  ####################################################################
  # Reusable schemas (data models)
  ####################################################################
  securitySchemes:
    api_key:
      type: apiKey
      in: header
      name: x-api-key
      description: 'API Key asignado al cliente para el consumo del API.'
    #Authorization with Lambda-Cognito
    authorizer:
      type: apiKey
      in: header
      name: Authorization
      description: 'Token JWT para el consumo del API.'
      x-amazon-apigateway-authtype : custom
      x-amazon-apigateway-authorizer:
        type: token
        identitySource: v1
        authorizerUri: 
          Fn::Sub: arn:aws:apigateway:${RegionToDeploy}:lambda:path/2015-03-31/functions/arn:aws:lambda:${RegionToDeploy}:${AwsAccountIdToDeploy}:function:${EnvironmentIdBase}-${LambdaAuthorizer}:production/invocations
        authorizerResultTtlInSeconds: 3600
        identityValidationExpression: ^Bearer [-0-9a-zA-z\.]*$
